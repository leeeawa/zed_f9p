# zed_f9p.yaml - ZED-F9P RTK Rover 详细配置
# 本文件用于配置 ublox_gps_node驱动程序，以使 ZED-F9P 模块作为 RTK Rover (移动站) 工作。

ublox_gps_node:
  ros__parameters:
    # --------------------------------------------------------------------------
    # 1. 基本连接和调试设置
    # --------------------------------------------------------------------------
    debug: 1                     # 驱动节点的日志输出级别。
                                 #   0: 关闭 (Off) - 不输出任何日志。
                                 #   1: 错误 (Error) - 仅输出错误信息。推荐在系统稳定运行时使用。
                                 #   2: 警告 (Warning) - 输出错误和警告信息。
                                 #   3: 信息 (Info) - 输出错误、警告和一般运行信息。推荐在调试阶段使用。
                                 #   4: 调试 (Debug) - 输出最详细的调试信息，用于深入问题排查。

    device: /dev/ttyUSB0         # !!! 重要: ZED-F9P模块连接到计算机的串口设备路径 !!!
                                 # 请务必根据实际情况修改此路径。
                                 # Linux下常见的路径有 /dev/ttyACM0, /dev/ttyACM1, /dev/ttyUSB0, /dev/ttyUSB1 等。
                                 # 可以通过命令 `ls /dev/ttyACM*` 或 `ls /dev/ttyUSB*` 来查找正确的设备名。

    frame_id: gps                # ROS TF (Transform Frame) 坐标系名称。
                                 # 所有由此节点发布的带有Header的消息 (如NavSatFix, Pose, Twist) 都会使用此frame_id。
                                 # 'gps' 或 'gps_link' 是常用的名称。

    # --------------------------------------------------------------------------
    # 2. UART1 (主通信接口) 配置
    # --------------------------------------------------------------------------
    # 当ZED-F9P通过USB连接到计算机时，其内部的UART1接口被虚拟化为USB CDC ACM设备，
    # 因此这里的uart1配置实际上是针对USB连接的通信参数。
    uart1:
      baudrate: 115200           # UART1 (即USB虚拟串口) 的波特率。
                                 # 驱动会尝试将模块配置为此波特率。
                                 # ZED-F9P支持的最高波特率远高于此值 (例如460800 bps 或更高)。
                                 # 如果设置为1Hz的较低数据输出频率，115200通常足够。
                                 # 若提高数据输出频率 (如10Hz) 或启用了多种消息，可能需要更高的波特率以避免数据拥堵。
                                 # ZED-F9P出厂默认波特率通常是38400。

    # --------------------------------------------------------------------------
    # 3. 启动时配置模块
    # --------------------------------------------------------------------------
    config_on_startup: true      # 是否在驱动节点启动时根据此YAML文件中的设置来配置ZED-F9P模块。
                                 #   true: (强烈推荐) 驱动会发送配置命令到模块，确保模块按照此文件设定工作。
                                 #   false: 驱动不修改模块当前配置，使用模块非易失性存储器中已保存的配置。
                                 #          若模块已通过U-Center等工具预先配置好，可设为false。

    # --------------------------------------------------------------------------
    # 4. 测量和导航更新率
    # --------------------------------------------------------------------------
    # cfg_rate: # 这是旧版驱动中用于分别设置测量和导航更新率的参数结构。
    #   meas_rate_hz: 1.0  # GNSS原始测量数据的更新频率 (Hz)。
    #   nav_rate_hz: 1.0   # 导航解算结果 (位置、速度等) 的更新频率 (Hz)。
    rate: 1.0                    # 导航解算结果的更新频率 (Hz)。
                                 # 对于大多数版本的ublox_gps驱动，此参数会同时影响测量周期和导航周期。
                                 # 1Hz表示每秒输出一次定位结果。对于某些低速应用或测试是可接受的。
                                 # RTK应用通常期望更高的更新率，如5Hz或10Hz，以获得更平滑的轨迹。

    # --------------------------------------------------------------------------
    # 5. 动态模型 (Dynamic Model)
    # --------------------------------------------------------------------------
    # 动态模型影响卡尔曼滤波器的行为，以适应不同的运动特性，从而提高定位精度和稳定性。
    dmodel: 4                    # 选择的动态模型。
                                 #   0: Portable (便携式) - 适用于低动态或静止场景，如手持设备。
                                 #   2: Stationary (静止) - 适用于固定位置，如RTK基站的Survey-in过程。
                                 #   3: Pedestrian (行人) - 适用于行人运动特性。
                                 #   4: Automotive (车载) - 适用于车辆等地面移动机器人(Rover)。!!! 推荐Rover使用此模型 !!!
                                 #   5: Sea (航海) - 适用于船舶。
                                 #   6: Airborne <1g (机载, 加速度 <1g) - 适用于低动态飞行器。
                                 #   7: Airborne <2g (机载, 加速度 <2g)
                                 #   8: Airborne <4g (机载, 加速度 <4g)
                                 #   9: Wrist (手腕佩戴) - 如智能手表。
                                 #  10: Bike (自行车)

    # --------------------------------------------------------------------------
    # 6. GNSS (全球导航卫星系统) 配置 和 RTK (实时动态差分) 模式
    # --------------------------------------------------------------------------
    gnss:
      # 启用/禁用不同的卫星系统。启用更多系统通常能提高定位的可用性和稳定性，尤其是在有遮挡的环境中。
      gps: true                  # 启用 GPS (美国全球定位系统)
      glonass: true              # 启用 GLONASS (俄罗斯格洛纳斯系统)
      galileo: true              # 启用 Galileo (欧盟伽利略系统)
      beidou: true               # 启用 BeiDou (中国北斗系统)
      sbas: false                # 禁用 SBAS (星基增强系统, 如WAAS, EGNOS, MSAS)。
                                 # 对于RTK应用，通常不使用SBAS，因为它提供的精度远低于RTK，且有时可能干扰RTK解算。
      # qzss: true               # 启用 QZSS (日本准天顶卫星系统)。主要覆盖日本及亚太地区，其他地区可禁用。

      rtk:
        mode: 1                  # !!! RTK模式设置: 这是配置ZED-F9P作为RTK Rover的核心参数 !!!
                                 #   0: 关闭RTK (No RTK) - 模块作为普通GNSS接收机工作。
                                 #   1: RTK Rover (移动站模式) - 模块接收来自基站的差分改正数据，进行高精度定位。
                                 #   2: RTK Base (基站模式) - 模块作为基站，生成并输出差分改正数据。(此YAML不适用)

    tmode3: 0                    # 时间模式3 (Time Mode 3) - 主要用于基站的Survey-In (自调查) 过程。
                                 #   0: 禁用Survey-In。!!! 对于RTK Rover，此值必须为0 !!!
                                 #   1: Survey-In启用，达到设定的时间和精度后，坐标固定并切换到固定模式(Fixed Mode)。
                                 #   2: Survey-In启用，模块持续进行自调查，不自动切换到固定模式。

    # --------------------------------------------------------------------------
    # 7. ROS 消息发布配置 (控制节点发布哪些GPS数据)
    # --------------------------------------------------------------------------
    publish:
      all: false                 # 总开关，控制是否发布所有类型的消息。
                                 #   false: (推荐) 精确控制下面各项具体消息的发布，避免不必要的数据流量。
                                 #   true: 发布驱动支持的所有消息类型，可能产生大量数据。

      # 标准ROS消息 (ROS社区广泛使用的标准消息类型)
      nav_sat_fix: true          # 是否发布 sensor_msgs/NavSatFix 消息。
                                 # 这是ROS中标准的GPS位置消息，发布到 `/fix` 话题。
                                 # 包含经纬度、海拔、定位状态、协方差矩阵等核心定位信息。!!! 强烈推荐发布 !!!
      # twist: true                # 可选: 是否发布 geometry_msgs/TwistWithCovarianceStamped 消息。
                                 # 发布到 `/fix_velocity` (或类似) 话题，包含线速度和角速度信息。

      # UBX协议特定消息 (u-blox自定义的二进制消息，通常包含更丰富或更底层的信息)
      nav:                       # NAV (Navigation results) 系列消息
        all: false               # NAV系列消息总开关。设为false以精确控制以下NAV子消息。
        # pvt: true              # 是否发布 UBX-NAV-PVT (Position, Velocity, Time solution) 消息。
                                 # 这是u-blox导航信息的核心消息，内容非常全面，包括位置、速度、时间、精度因子、
                                 # 定位模式 (Fix type)、RTK状态等。
                                 # 如果 `nav_sat_fix` 已设为 `true`，驱动通常会根据PVT或其他UBX导航消息来生成NavSatFix。
                                 # 除非需要PVT消息中独有的字段，否则为了精简，可以不单独发布PVT。
        relposned: true          # 是否发布 UBX-NAV-RELPOSNED (Relative Positioning Information in NED frame) 消息。
                                 # !!! 对于RTK Rover，此消息至关重要 !!!
                                 # 它提供了移动站相对于RTK基站在东北天(NED)坐标系下的相对位置矢量、距离和航向角。
                                 # 是获取高精度相对定位和航向的关键。
        # hpposllh: true         # 可选: 是否发布 UBX-NAV-HPPOSLLH (High Precision Position Solution in LLH) 消息。
                                 # 提供高精度的经纬高绝对位置信息，在RTK固定解状态下非常有用。
        # sat: true              # 可选: 是否发布 UBX-NAV-SAT (Satellite Information) 消息。
                                 # 提供当前可见卫星的详细信息，如PRN、仰角、方位角、信号强度(CNO)等。
                                 # 对于诊断卫星信号质量、排查定位问题很有帮助。

      # 以下消息类型通常在一般Rover应用中保持禁用，以减少数据量和配置复杂度。
      # 如有特殊需求 (如原始数据记录、高级诊断)，可按需启用。
      # inf:                     # INF (Information) 消息 - 文本形式的通知、警告、错误信息
      #   all: false
      # aid:                     # AID (AssistNow Aiding) 消息 - 辅助定位数据相关
      #   all: false
      # mon:                     # MON (Monitoring) 消息 - 监控硬件状态、固件版本等
      #   all: false
      # rxm:                     # RXM (Receiver Manager) 消息 - 原始测量数据、RTCM输入状态等
      #   all: false